class e{constructor(e=null,t="white"){this.currentTile=e,this.color=t}get direction(){return"white"===this.color?1:-1}get myPos(){return{x:this.currentTile.x,y:this.currentTile.y}}}class t extends e{findValidMoves(e){const t=[],{myPos:i}=this;for(let r=i.x+1,s=i.y+1;r<8&&s<8;r++,s++){let i=e.getTileAtPosition(r,s);if(i.currentPiece&&i.currentPiece.color==this.color)break;if(i.currentPiece&&i.currentPiece.color!=this.color){t.push(i);break}i&&t.push(i)}for(let r=i.x-1,s=i.y-1;r>=0&&s>=0;r--,s--){let i=e.getTileAtPosition(r,s);if(i.currentPiece&&i.currentPiece.color==this.color)break;if(i.currentPiece&&i.currentPiece.color!=this.color){t.push(i);break}i&&t.push(i)}for(let r=i.x+1,s=i.y-1;r<8&&s>=0;r++,s--){let i=e.getTileAtPosition(r,s);if(i.currentPiece&&i.currentPiece.color==this.color)break;if(i.currentPiece&&i.currentPiece.color!=this.color){t.push(i);break}i&&t.push(i)}for(let r=i.x-1,s=i.y+1;r>=0&&s<8;r--,s++){let i=e.getTileAtPosition(r,s);if(i.currentPiece&&i.currentPiece.color==this.color)break;if(i.currentPiece&&i.currentPiece.color!=this.color){t.push(i);break}i&&t.push(i)}return t}constructor(...e){super(...e),this.pieceSymbol=()=>"black"==this.color?"♝":"♗"}}class i{get tileBaseColor(){return(this.id+this.y%2)%2==0?"black":"white"}constructor(e,t,i,r=!1,s=0,o=100,c=50){this.isOn=r,this.hue=s,this.saturation=o,this.brightness=c,this.id=e,this.x=t,this.y=i}}class r extends e{findValidMoves(e){const t=[],{myPos:i}=this;return[e.getTileAtPosition(i.x+2,i.y+1),e.getTileAtPosition(i.x+1,i.y+2),e.getTileAtPosition(i.x-2,i.y+1),e.getTileAtPosition(i.x-1,i.y+2),e.getTileAtPosition(i.x-2,i.y-1),e.getTileAtPosition(i.x-1,i.y-2),e.getTileAtPosition(i.x+2,i.y-1),e.getTileAtPosition(i.x+1,i.y-2)].forEach((e=>{e&&(e.currentPiece&&e.currentPiece.color==this.color||t.push(e))})),t}constructor(...e){super(...e),this.pieceSymbol=()=>"black"==this.color?"♞":"♘"}}class s extends e{findValidMoves(e){const t=[],{myPos:i,direction:r}=this;let s=e.getTileAtPosition(i.x+r,i.y+r),o=e.getTileAtPosition(i.x-r,i.y+r);const c=e=>{e&&e.currentPiece&&e.currentPiece.color!=this.color&&t.push({x:e.x,y:e.y})};[s,o].forEach((e=>c(e)));let l=e.getPieceAtPosition(i.x,i.y+r);if(l||t.push({x:i.x,y:i.y+r}),!this.hasMoved&&!l){e.getPieceAtPosition(i.x,i.y+2*r)||t.push({x:i.x,y:i.y+2*r})}return t}constructor(...e){super(...e),this.pieceSymbol=()=>"black"==this.color?"♟︎":"♙"}}class o extends e{findValidMoves(e){const t=[],{myPos:i}=this;for(let r=i.x-1;r>=0;r--){let s=e.getTileAtPosition(r,i.y);if(s.currentPiece&&s.currentPiece.color==this.color)break;if(s.currentPiece&&s.currentPiece.color!=this.color){t.push(s);break}s&&t.push(s)}for(let r=i.x+1;r<8;r++){let s=e.getTileAtPosition(r,i.y);if(s.currentPiece&&s.currentPiece.color==this.color)break;if(s.currentPiece&&s.currentPiece.color!=this.color){t.push(s);break}s&&t.push(s)}for(let r=i.y-1;r>=0;r--){let s=e.getTileAtPosition(i.x,r);if(s.currentPiece&&s.currentPiece.color==this.color)break;if(s.currentPiece&&s.currentPiece.color!=this.color){t.push(s);break}s&&t.push(s)}for(let r=i.y+1;r<8;r++){let s=e.getTileAtPosition(i.x,r);if(s.currentPiece&&s.currentPiece.color==this.color)break;if(s.currentPiece&&s.currentPiece.color!=this.color){t.push(s);break}s&&t.push(s)}return t}constructor(...e){super(...e),this.pieceSymbol=()=>"black"==this.color?"♜":"♖"}}class c extends e{findValidMoves(e){const t=[],{myPos:i}=this;for(let r=i.x-1;r>=0;r--){let s=e.getTileAtPosition(r,i.y);if(s.currentPiece&&s.currentPiece.color==this.color)break;if(s.currentPiece&&s.currentPiece.color!=this.color){t.push(s);break}s&&t.push(s)}for(let r=i.x+1;r<8;r++){let s=e.getTileAtPosition(r,i.y);if(s.currentPiece&&s.currentPiece.color==this.color)break;if(s.currentPiece&&s.currentPiece.color!=this.color){t.push(s);break}s&&t.push(s)}for(let r=i.y-1;r>=0;r--){let s=e.getTileAtPosition(i.x,r);if(s.currentPiece&&s.currentPiece.color==this.color)break;if(s.currentPiece&&s.currentPiece.color!=this.color){t.push(s);break}s&&t.push(s)}for(let r=i.y+1;r<8;r++){let s=e.getTileAtPosition(i.x,r);if(s.currentPiece&&s.currentPiece.color==this.color)break;if(s.currentPiece&&s.currentPiece.color!=this.color){t.push(s);break}s&&t.push(s)}for(let r=i.x+1,s=i.y+1;r<8&&s<8;r++,s++){let i=e.getTileAtPosition(r,s);if(i.currentPiece&&i.currentPiece.color==this.color)break;if(i.currentPiece&&i.currentPiece.color!=this.color){t.push(i);break}i&&t.push(i)}for(let r=i.x-1,s=i.y-1;r>=0&&s>=0;r--,s--){let i=e.getTileAtPosition(r,s);if(i.currentPiece&&i.currentPiece.color==this.color)break;if(i.currentPiece&&i.currentPiece.color!=this.color){t.push(i);break}i&&t.push(i)}for(let r=i.x+1,s=i.y-1;r<8&&s>=0;r++,s--){let i=e.getTileAtPosition(r,s);if(i.currentPiece&&i.currentPiece.color==this.color)break;if(i.currentPiece&&i.currentPiece.color!=this.color){t.push(i);break}i&&t.push(i)}for(let r=i.x-1,s=i.y+1;r>=0&&s<8;r--,s++){let i=e.getTileAtPosition(r,s);if(i.currentPiece&&i.currentPiece.color==this.color)break;if(i.currentPiece&&i.currentPiece.color!=this.color){t.push(i);break}i&&t.push(i)}return t}constructor(...e){super(...e),this.pieceSymbol=()=>"black"==this.color?"♛":"♕"}}class l extends e{findValidMoves(e){const t=[],{myPos:i,direction:r}=this;let s=e.getTileAtPosition(i.x,i.y+r),o=e.getTileAtPosition(i.x,i.y-r),c=e.getTileAtPosition(i.x-1,i.y),l=e.getTileAtPosition(i.x+1,i.y),n=e.getTileAtPosition(i.x+r,i.y+r),h=e.getTileAtPosition(i.x+r,i.y-r),a=e.getTileAtPosition(i.x-r,i.y+r),u=e.getTileAtPosition(i.x-r,i.y-r);const P=e=>{e&&(!e.currentPiece||e.currentPiece&&e.currentPiece.color!=this.color)&&t.push({x:e.x,y:e.y})};return[s,o,c,l,n,h,a,u].forEach((e=>{P(e)})),t}constructor(...e){super(...e),this.pieceSymbol=()=>"black"==this.color?"♚":"♔"}}class n{constructor(){this.boardTiles=[],this.flatTileList=[],this.counter=0,this.currentPlayersTurn="white",this.setupDataModel(),this.setupPiecesOnBoard()}getTileAtPosition(e,t){try{return this.boardTiles[t][e]}catch(e){return null}}getPieceAtPosition(e,t){try{return this.boardTiles[t][e].currentPiece}catch(e){return null}}selectPiece(e,t){return this.selectedPiece=this.getPieceAtPosition(e,t),console.log(this.selectedPiece),this.selectedPiece}movePiece(e,t){console.log("moving piece",e,t),t.currentPiece=e.currentPiece,t.currentPiece instanceof s&&(t.currentPiece.hasMoved=!0),e.currentPiece=null,t.currentPiece.currentTile=t}findCurrentlyLit(){return this.flatTileList.filter((e=>e.isOn))}turnOffAll(){this.flatTileList.forEach((e=>e.isOn=!1))}markAllInvalid(){this.flatTileList.forEach((e=>e.isValidPosition=!1))}setupDataModel(){for(let e=0;e<8;e++)this.makeRow(e);for(let e=0;e<this.flatTileList.length;e++){const t=this.flatTileList[e];t.prevLight=undefined,e<this.flatTileList.length-1&&(t.nextLight=this.flatTileList[e+1])}this.flatTileList[0].prevLight=this.flatTileList[this.flatTileList.length-1],this.flatTileList[this.flatTileList.length-1].nextLight=this.flatTileList[0]}setupPiecesOnBoard(){this.boardTiles[0][0].currentPiece=new o(this.boardTiles[0][0]),this.boardTiles[0][7].currentPiece=new o(this.boardTiles[0][7]),this.boardTiles[0][1].currentPiece=new r(this.boardTiles[0][1]),this.boardTiles[0][6].currentPiece=new r(this.boardTiles[0][6]),this.boardTiles[0][2].currentPiece=new t(this.boardTiles[0][2]),this.boardTiles[0][5].currentPiece=new t(this.boardTiles[0][5]),this.boardTiles[0][3].currentPiece=new c(this.boardTiles[0][3]),this.boardTiles[0][4].currentPiece=new l(this.boardTiles[0][4]),this.boardTiles[7][0].currentPiece=new o(this.boardTiles[7][0],"black"),this.boardTiles[7][7].currentPiece=new o(this.boardTiles[7][7],"black"),this.boardTiles[7][1].currentPiece=new r(this.boardTiles[7][1],"black"),this.boardTiles[7][6].currentPiece=new r(this.boardTiles[7][6],"black"),this.boardTiles[7][2].currentPiece=new t(this.boardTiles[7][2],"black"),this.boardTiles[7][5].currentPiece=new t(this.boardTiles[7][5],"black"),this.boardTiles[7][4].currentPiece=new l(this.boardTiles[7][4],"black"),this.boardTiles[7][3].currentPiece=new c(this.boardTiles[7][3],"black");for(let e=0;e<8;e++)this.boardTiles[1][e].currentPiece=new s(this.boardTiles[1][e]),this.boardTiles[6][e].currentPiece=new s(this.boardTiles[6][e],"black")}makeRow(e){this.boardTiles[e]=[];for(let t=0;t<8;t++){const r=new i(this.counter++,t,e);this.boardTiles[e].push(r),this.flatTileList.push(r)}}}class h{updatePattern(e){return e.turnOffAll(),e.boardTiles[this.currentlyLitLightRow].forEach((e=>e.isOn=!0)),this.currentlyLitLightRow++,this.currentlyLitLightRow>=e.boardTiles.length&&(this.currentlyLitLightRow=0),e}constructor(){this.currentlyLitLightRow=0}}class a{constructor(){this.firstRun=!0}updatePattern(e){this.firstRun&&(e.turnOffAll(),e.flatTileList[0].isOn=!0,this.firstRun=!1);let t=e.findCurrentlyLit();if(t.length>0)for(let e=t.length-1;0<=e;e--){const i=t[e];i.isOn=!1,i.nextLight.isOn=!0}return e}}class u{updatePattern(e){e.turnOffAll();let t=e.flatTileList[this.snakeHead];t.isOn=!0;let i=t;for(let e=0;e<this.snakeLength;e++)i=i.nextLight,i.isOn=!0,0==e&&(this.snakeHead=i.id);return e}constructor(){this.snakeHead=0,this.snakeLength=12}}new class{constructor(){window.addEventListener("DOMContentLoaded",(()=>{document.getElementById("mode").addEventListener("change",(e=>{this.changeMode(e)})),setInterval((()=>{this.updateDisplay()}),100),this.chessBoard=new n,this.drawInitialBoard()}))}updateDisplay(){this.mode&&(this.chessBoard=this.mode.updatePattern(this.chessBoard)),this.chessBoard.flatTileList.forEach((e=>{let t=document.getElementById(`tile-${e.id}`);const i=e.isOn?"on":"off";t.className=`chess-tile ${i} tile-color-${e.tileBaseColor}`,e.currentPiece&&(t.style.color=e.currentPiece.color);let r="";e.currentPiece&&(r=e.currentPiece.pieceSymbol()),t.innerHTML=`${r}`}))}changeMode(e){switch(e.target.value){case"snake":this.mode=new u;break;case"sequence":this.mode=new a;break;case"row":this.mode=new h;break;case"none":this.mode=null}}drawInitialBoard(){let e=document.getElementById("chess-board");for(;e.firstChild;)e.removeChild(e.firstChild);this.chessBoard.boardTiles.map((e=>{const t=e.map((e=>{let t=document.createElement("div");t.className=`chess-tile ${e.id%2==0?"even":"odd"}  ${e.isOn?"on":"off"} tile-color-${e.tileBaseColor}`,t.id=`tile-${e.id}`;return t.addEventListener("click",(()=>{if(e.isValidPosition)this.chessBoard.movePiece(this.chessBoard.selectedPiece.currentTile,e),this.chessBoard.turnOffAll(),this.chessBoard.markAllInvalid(),this.chessBoard.currentPlayersTurn="white"===this.chessBoard.currentPlayersTurn?"black":"white";else{this.chessBoard.markAllInvalid();let t=this.chessBoard.selectPiece(e.x,e.y),i=e.isOn;if(this.chessBoard.turnOffAll(),t&&t.color==this.chessBoard.currentPlayersTurn&&(e.isOn=!i,e.isOn)){t.findValidMoves(this.chessBoard).forEach((e=>{this.chessBoard.getTileAtPosition(e.x,e.y).isValidPosition=!0,this.chessBoard.getTileAtPosition(e.x,e.y).isOn=!0}))}}})),t}));let i=document.createElement("div");return i.className="row",t.forEach((e=>{i.appendChild(e)})),i})).forEach((t=>e.appendChild(t)))}};
//# sourceMappingURL=index.6ae8b34a.js.map
