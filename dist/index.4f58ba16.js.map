{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-4a024ce5ed1edfd9.js","src/ChessLightsMain.ts","src/ChessBoard.ts","src/ChessPieces/Bishop.ts","src/ChessPieces/ChessPiece.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/ChessTile.ts","src/ChessPieces/util.ts","src/ChessPieces/Knight.ts","src/ChessPieces/Pawn.ts","src/ChessPieces/Rook.ts","src/ChessPieces/Queen.ts","src/ChessPieces/King.ts","src/Player.ts","src/LightPatterns/RowPattern.ts","src/LightPatterns/SequencePattern.ts","src/LightPatterns/SnakePattern.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"aff0ef394f58ba16\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import ChessBoard from \"./ChessBoard\"\nimport ILightPattern from \"./LightPatterns/ILightPattern\"\nimport { RowPattern } from \"./LightPatterns/RowPattern\"\nimport { SequencePattern } from \"./LightPatterns/SequencePattern\"\nimport { SnakePattern } from \"./LightPatterns/SnakePattern\"\n\nexport class ChessLightsMain {\n  chessBoard: ChessBoard\n  mode: ILightPattern\n\n  constructor() {\n    // Waiting for page to be loaded to get the elements on the page and add\n    // listeners/setup the game\n    window.addEventListener('DOMContentLoaded', () => {\n\n      // Listener for the drop down menu\n      document.getElementById('mode').addEventListener('change', (event) => {\n        this.changeMode(event)\n      })\n\n      setInterval(() => {\n        this.chessBoard.updateDisplay(this.mode)\n      }, 100)\n\n      this.chessBoard = new ChessBoard('chess-board')\n      this.chessBoard.drawInitialBoard()\n      // this.mode = new SequencePattern()\n    });\n  }\n\n\n  /**\n   * Method handles drop down change events and creates the corresponding light\n   * pattern/sequence handler.  Used primarily for prototyping LED patterns for\n   * LED chess board.\n   * \n   * @param event an event from the select/options dropdown, the event.target.value is used to determine which Pattern instance to create\n   */\n  changeMode(event) {\n    switch (event.target.value) {\n      case 'snake': this.mode = new SnakePattern()\n        break;\n      case 'sequence': this.mode = new SequencePattern()\n        break;\n      case 'row': this.mode = new RowPattern()\n        break;\n      case 'none': this.mode = null\n        break;\n    }\n  }\n  \n}\nnew ChessLightsMain()","import Bishop from \"./ChessPieces/Bishop\";\nimport ChessTile from \"./ChessTile\"\nimport Knight from \"./ChessPieces/Knight\";\nimport Pawn from \"./ChessPieces/Pawn\";\nimport Rook from \"./ChessPieces/Rook\";\nimport Queen from \"./ChessPieces/Queen\";\nimport King from \"./ChessPieces/King\";\nimport ChessPiece from \"./ChessPieces/ChessPiece\";\nimport Player from \"./Player\";\nimport ILightPattern from \"./LightPatterns/ILightPattern\";\nimport { getFile, getRank } from \"./ChessPieces/util\";\n\ntype BoardPosition = {\n  x:number\n  y:number\n}\n\n/**\n * Builds the board and keeps track of the game state (selected piece, current player etc)\n * \n * The board is an x/y grid drawn top to bottom left to right\n */\nexport default class ChessBoard {\n  redraw: boolean = true\n  boardTiles: Array<Array<ChessTile>> = []\n  flatTileList: Array<ChessTile> = []\n  players: Array<Player> = []\n  counter = 0\n  selectedPiece: ChessPiece\n\n  //FEN helper props below\n  castlingAvailable = \"-\"\n  // If an enpassant capture is possible the square to move to for the capture or -\n  enPassantSquare = \"-\"\n  // Halfmove clock:\n  // Number of halfmoves since the last capture or pawn move. It's used for the fifty-move rule.\n  numberOfHalfMoves = 0\n  // Starts at 1 and is incremented after Black's move.\n  numberOfFullMoves = 1\n\n  get currentPlayersTurn(): \"white\" | \"black\" {\n    return this.currentPlayer.color\n  }\n  currentPlayer: Player\n  get whitePlayer() {\n    return this.players[0]\n  }\n  get blackPlayer() {\n    return this.players[1]\n  }\n\n  constructor(private targetElement:string, autoSetupPieces:boolean = true) {\n    this.setupDataModel()\n    if(autoSetupPieces)\n      this.setupPiecesOnBoard()\n  }\n\n  /**\n   * \n   * @param x Horizontal offset from 0 for tile to get (0-7)\n   * @param y Vetical offset from 0 for tile to get (0-7)\n   * @returns A ChessTile if one exists at the position or null if the position is out of bounds\n   */\n  getTileAtPosition(x: number, y: number): ChessTile | null {\n    try {\n      return this.boardTiles[y][x];\n    } catch (e) {\n      return null\n    }\n  }\n\n  /**\n   * \n   * @param x Horizontal offset from 0 for Piece to get (0-7)\n   * @param y Vertical offset from 0 for Piece to get (0-7)\n   * @returns Piece on tile at given position or null if no piece or invalid tile\n   */\n  getPieceAtPosition(x: number, y: number): ChessPiece | null {\n    try {\n      return this.boardTiles[y][x].currentPiece\n    } catch (e) {\n      return null\n    }\n  }\n\n  /**\n   * \n   * @param x Horizontal offset from 0 for Piece to select (0-7)\n   * @param y Vertical offset from 0 for Piece to select (0-7)\n   * @returns The selected piece if a piece existed on the tile at the given position or null if no piece or tile at position\n   */\n  selectPiece(x: number, y: number): ChessPiece | null {\n    // Don't return a piece if a tile has a piece, but the piece isn't the same color as the current player\n    this.selectedPiece = this.getPieceAtPosition(x, y)\n\n    // console.log(`Selected Piece: ${this.selectedPiece} on board: ${this.targetElement}`)\n    return this.selectedPiece\n  }\n\n  isPlayerInCheckAfterClonedBoardMove(fromTile: BoardPosition, toTile: BoardPosition):boolean {\n    let clonedBoardState = this.clone()\n    clonedBoardState.movePiecePosition(fromTile, toTile)\n    clonedBoardState.redraw = true\n    clonedBoardState.updateDisplay()\n    return clonedBoardState.checkIfPlayerIsInCheck()\n  }\n\n  /**\n   * Method will move a piece from one tile to another so long as the move\n   * doesn't put or leave the current player's king in check.\n   * \n   * @param fromTile The tile to move the piece from\n   * @param toTile The tile to move the piece to\n   * @returns [boolean] true if the piece was moved false if it was not\n   */\n  movePiece(fromTile: ChessTile, toTile: ChessTile, withChecking:boolean=true): boolean {\n    console.log(`moving piece from: ${fromTile}, to: ${toTile} on board: ${this.targetElement}`)\n\n    // Cloning the current board so can simulate the move and see if the\n    // current players king is left in check\n    if(withChecking)\n    {\n      let willMovePutPlayerIntoCheck = this.isPlayerInCheckAfterClonedBoardMove(fromTile, toTile)\n      console.log(`will move leave player in check ${willMovePutPlayerIntoCheck}`)\n  \n      if(willMovePutPlayerIntoCheck) return false\n    }\n    \n    const isPlayerPieceOnTile = piece => piece != toTile.currentPiece\n\n    if(toTile.currentPiece) {\n      if(toTile.currentPiece.color==\"white\")\n      this.players[0].pieces = this.players[0].pieces.filter(isPlayerPieceOnTile)\n      if(toTile.currentPiece.color==\"black\")\n      this.players[1].pieces = this.players[1].pieces.filter(isPlayerPieceOnTile)\n    }\n\n    // Moves the selected pieces from the from to tile to the to tile\n    toTile.currentPiece = fromTile.currentPiece\n    toTile.currentPiece.hasMoved = true\n\n    if (toTile.currentPiece instanceof Pawn) {\n      if(toTile.y == 0 || toTile.y==7) {\n        let theNewQueen = new Queen(this.boardTiles, toTile.y, toTile.x, toTile.currentPiece.color)\n        this.currentPlayer.pieces.splice(this.currentPlayer.pieces.indexOf(toTile.currentPiece), 1, theNewQueen)\n        toTile.currentPiece = theNewQueen\n      }\n    }\n\n    fromTile.currentPiece = null\n    toTile.currentPiece.currentTile = toTile\n\n    if(toTile.currentPiece instanceof King){\n      if(toTile.canKingSideCastle) {\n        const kingSideRook = this.currentPlayer.kingSideRook\n        this.movePiecePosition(kingSideRook.currentTile, {x: toTile.x-1, y: toTile.y})\n        kingSideRook.hasMoved = true\n      }\n      if(toTile.canQueenSideCastle) {\n        const queenSideRook = this.currentPlayer.queenSideRook\n        this.movePiecePosition(queenSideRook.currentTile, {x: toTile.x+1, y: toTile.y})\n        queenSideRook.hasMoved = true\n      }\n    }\n\n    return true\n  }\n\n  // This method doesn't depend on being passed the tile itself necessarily it\n  // will use the given position to find the \n  movePiecePosition(fromPosition: BoardPosition, toPosition: BoardPosition) {\n    let fromTile = this.getTileAtPosition(fromPosition.x, fromPosition.y)\n    let toTile = this.getTileAtPosition(toPosition.x, toPosition.y)\n\n    this.movePiece(fromTile, toTile, false)\n  }\n\n  /**\n   * Sets the isValidPosition to false for all tiles\n   */\n  markAllInvalid() {\n    this.flatTileList.forEach(light => light.isValidPosition = false)\n  }\n\n  /**\n   * Sets up the initial data model(s) for the tiles, creates all the rows\n   * that make up the grid of tiles and populates each row with tiles\n   */\n  setupDataModel() {\n    for (let y = 0; y < 8; y++) {\n      this.makeRow(y)\n    }\n\n    // setup link list references between objects\n    let prevLight\n    for (let i = 0; i < this.flatTileList.length; i++) {\n      const currentLight = this.flatTileList[i];\n      currentLight.prevLight = prevLight\n      if (i < this.flatTileList.length - 1) {\n        currentLight.nextLight = this.flatTileList[i + 1]\n      }\n    }\n\n    this.flatTileList[0].prevLight = this.flatTileList[this.flatTileList.length - 1]\n    this.flatTileList[this.flatTileList.length - 1].nextLight = this.flatTileList[0]\n  }\n\n  setupPiecesOnBoard() {\n    // White back row\n    let whiteRook1 = new Rook(this.boardTiles, 0, 0)\n    let whiteKnight1 = new Knight(this.boardTiles, 0, 1)\n    let whiteBishop1 = new Bishop(this.boardTiles, 0, 2)\n    let whiteQueen = new Queen(this.boardTiles, 0, 3)\n    let whiteKing = new King(this.boardTiles, 0, 4)\n    let whiteBishop2 = new Bishop(this.boardTiles, 0, 5)\n    let whiteKnight2 = new Knight(this.boardTiles, 0, 6)\n    let whiteRook2 = new Rook(this.boardTiles, 0, 7)\n    whiteRook2.kingSideRook = true\n\n    // Black back row\n    let blackRook1 = new Rook(this.boardTiles, 7, 0, \"black\")\n    let blackKnight1 = new Knight(this.boardTiles, 7, 1, \"black\")\n    let blackBishop1 = new Bishop(this.boardTiles, 7, 2, \"black\")\n    let blackQueen = new Queen(this.boardTiles, 7, 3, \"black\")\n    let blackKing = new King(this.boardTiles, 7, 4, \"black\")\n    let blackBishop2 = new Bishop(this.boardTiles, 7, 5, \"black\")\n    let blackKnight2 = new Knight(this.boardTiles, 7, 6, \"black\")\n    let blackRook2 = new Rook(this.boardTiles, 7, 7, \"black\")\n    blackRook2.kingSideRook = true\n\n    const whitePawns = []\n    const blackPawns = []\n\n    for (let x = 0; x < 8; x++) {\n      // White pawns\n      const whitePawn = new Pawn(this.boardTiles, 1, x)\n      whitePawns.push(whitePawn)\n\n      // Black pawns\n      const blackPawn = new Pawn(this.boardTiles, 6, x, \"black\")\n      blackPawns.push(blackPawn)\n    }\n\n    const player1 = new Player(\"white\")\n    player1.pieces = [whiteRook1, whiteRook2, whiteKnight1, whiteKnight2, whiteBishop1, whiteBishop2, whiteQueen, whiteKing, ...whitePawns]\n\n    const player2 = new Player(\"black\")\n    player2.pieces = [blackRook1, blackRook2, blackKnight1, blackKnight2, blackBishop1, blackBishop2, blackQueen, blackKing, ...blackPawns]\n\n    this.players = [player1, player2]\n\n    this.currentPlayer = player1\n  }\n\n  changeCurrentPlayer() {\n    this.turnOffAllTileLights();\n    this.markAllInvalid();\n    this.currentPlayer.inCheck = this.checkIfPlayerIsInCheck();\n    console.debug(`checked current player is in check while changing players ${this.currentPlayer}`)\n\n    this.currentPlayer = this.currentPlayer === this.players[0] ? this.players[1] : this.players[0];\n    console.debug(`Switched players is now ${this.currentPlayer} turn`)\n    console.log(this.generateFEN())\n\n    // Checking if the new player is now in check.\n    this.currentPlayer.inCheck = this.checkIfPlayerIsInCheck();\n    if(this.currentPlayer.inCheck) {\n      console.debug(`Checking if ${this.currentPlayer.color} in checkmate`)\n      this.currentPlayer.inCheckmate = this.cannotMakeAnyMoveWithoutLeavingKingInCheck()\n    } else {\n      console.debug(`Checking if ${this.currentPlayer.color} in stalemate`)\n      this.currentPlayer.inStalemate = this.cannotMakeAnyMoveWithoutLeavingKingInCheck()\n    }\n    console.debug(`done with checks:\\n${this.currentPlayer}`)\n    console.log(`Switched players is now ${this.currentPlayer} turn`)\n    if(this.currentPlayer.color === \"white\") {\n      this.numberOfFullMoves++\n    }\n\n    this.numberOfHalfMoves++\n  }\n\n  makeRow(rowNum: number) {\n    this.boardTiles[rowNum] = []\n\n    for (let x = 0; x < 8; x++) {\n      const newLightObject = new ChessTile(this.counter++, x, rowNum)\n\n      this.boardTiles[rowNum].push(newLightObject)\n\n      this.flatTileList.push(newLightObject)\n    }\n  }\n\n  checkIfPlayerIsInCheck(targetPlayer:Player = this.currentPlayer):boolean {\n    const otherPlayer = this.whitePlayer == targetPlayer ? this.blackPlayer : this.whitePlayer\n\n    let kingIsInCheck = false\n    otherPlayer.pieces.forEach(piece => {\n      const validMoves = piece.findValidMoves(this)\n      // If king is in check\n      if(targetPlayer.king && validMoves.find(val => val.x == targetPlayer.king.currentTile.x && val.y == targetPlayer.king.currentTile.y) ) {\n        kingIsInCheck = true\n      }\n    })\n    return kingIsInCheck\n  }\n\n  /**\n   * Will see if moving any of the target player's pieces will result in the\n   * player no longer being in check, will be called only if the target players\n   * king is already known to be in check currently\n   * \n   * @param targetPlayer The player to see if cannot make a move to get out of\n   * check mate\n   */\n  cannotMakeAnyMoveWithoutLeavingKingInCheck(targetPlayer:Player = this.currentPlayer) {\n    // For each of the target players pieces we'll clone the board, make the valid move and see if the player\n    // is in check on the cloned board.\n    let anyMoveGetsKingOutofCheck = false\n    targetPlayer.pieces.forEach(piece => {\n      const clonedBoard = this.clone()\n      const validMoves = piece.findValidMoves(clonedBoard)\n      validMoves.forEach(move => {\n        anyMoveGetsKingOutofCheck = anyMoveGetsKingOutofCheck || !clonedBoard.isPlayerInCheckAfterClonedBoardMove(piece.currentTile, move)\n      })\n    })\n    return !anyMoveGetsKingOutofCheck\n  }\n\n  checkIfCastlingPossible(player:Player = this.currentPlayer) {\n    console.log(\"check for castling\")\n\n    // setting both false until check if can castle on either side\n    player.canKingSideCastle = false\n    player.canQueenSideCastle = false\n\n    if(!player.kingHasMoved && !player.kingSideRookHasMoved) {\n\n      const { x:kingX, y:kingY } = player.king.currentTile\n\n      const tileNextTo = this.getTileAtPosition(kingX+1,kingY)\n      const tileTwoOver = this.getTileAtPosition(kingX+2,kingY)\n      \n      if(tileNextTo?.currentPiece == null && tileTwoOver?.currentPiece == null) {\n        player.canKingSideCastle = true\n        console.log(\"king side castling possible\")\n      }\n\n    }\n\n    if(!player.kingHasMoved && !player.queenSideRookHasMoved) {\n      const { x:kingX, y:kingY } = player.king.currentTile\n\n      const tileNextTo = this.getTileAtPosition(kingX-1,kingY)\n      const tileTwoOver = this.getTileAtPosition(kingX-2,kingY)\n      const tileThreeOver = this.getTileAtPosition(kingX-3,kingY)\n      if(tileNextTo?.currentPiece == null && tileTwoOver?.currentPiece == null && tileThreeOver?.currentPiece == null) {\n        player.canQueenSideCastle = true\n        console.log(\"queen side castling possible\")\n      }\n    }\n  }\n\n  checkIfEnPassantPossible() {\n\n  }\n\n\n  clone() {\n    const clonedBoard = new ChessBoard('hypothetical-board', false)\n\n    // Cloning players so can maniuplate their pieces in new board states\n    clonedBoard.players = this.players.map(player=>player.clone())\n\n    clonedBoard.currentPlayer = this.currentPlayer.color == \"white\" ? clonedBoard.whitePlayer : clonedBoard.blackPlayer\n\n\n    // Cloning board tiles so can manipulate what piece is on what tile without \n    // effecting the actual game being played.\n    clonedBoard.boardTiles = this.boardTiles.map<Array<ChessTile>>((rowOfTiles) => {\n        const newRowOfTiles = rowOfTiles.map(singleTile => {\n          const clonedTile = singleTile.clone()\n          if(singleTile.currentPiece) {\n            clonedTile.currentPiece = singleTile.currentPiece.clone(clonedBoard.boardTiles)\n            if(clonedTile.currentPiece) {\n              if(clonedTile.currentPiece.color == \"black\")\n                clonedBoard.blackPlayer.pieces.push(clonedTile.currentPiece)\n              if(clonedTile.currentPiece.color == \"white\")\n                clonedBoard.whitePlayer.pieces.push(clonedTile.currentPiece)\n            }\n          }\n          return clonedTile\n        })\n        return newRowOfTiles\n    })\n    clonedBoard.selectPiece(this.selectedPiece.currentTile.x, this.selectedPiece.currentTile.y)\n    clonedBoard.tileClickHandler(clonedBoard.selectedPiece.currentTile)\n    clonedBoard.drawInitialBoard()\n    clonedBoard.updateDisplay()\n    return clonedBoard\n  }\n\n  tileClickHandler(tile: ChessTile) {\n\n    // Spot is marked valid then try to make the move with current selected piece\n    if (tile.isValidPosition) {\n\n      // Try to move the piece, if the piece moves successfully then change players\n      if(this.movePiece(this.selectedPiece.currentTile, tile)) {\n        this.changeCurrentPlayer();\n      }\n    }\n    // If we didn't select a valid position to move a piece to check to see if we\n    // selected a new piece\n    else {\n      this.markAllInvalid();\n      let selectedPiece = this.selectPiece(tile.x, tile.y)\n\n      let wasOn = tile.isOn;\n      this.turnOffAllTileLights();\n      this.checkIfCastlingPossible()\n\n\n      if (selectedPiece && selectedPiece.color == this.currentPlayersTurn) {\n        tile.isOn = !wasOn\n        if (tile.isOn) {\n          let validMoves = selectedPiece.findValidMoves(this)\n\n          // King side castling\n          if(selectedPiece instanceof King && this.currentPlayer.canKingSideCastle) {\n            const {x: kingX, y: kingY} = this.currentPlayer.king.currentTile\n            const tileTwoOver = this.getTileAtPosition(kingX+2,kingY)\n            tileTwoOver.canKingSideCastle = true\n\n            validMoves.push(tileTwoOver)\n          }\n          // Queen side castling\n          if(selectedPiece instanceof King && this.currentPlayer.canQueenSideCastle) {\n            const {x: kingX, y: kingY} = this.currentPlayer.king.currentTile\n            const tileTwoOver = this.getTileAtPosition(kingX-2,kingY)\n            tileTwoOver.canQueenSideCastle = true\n\n            validMoves.push(tileTwoOver)\n          }\n\n          validMoves.forEach(validMove => {\n            // Marking all the valid moves for the selected piece on the board\n            let potentialMovePosition = this.getTileAtPosition(validMove.x, validMove.y)\n            if(potentialMovePosition){\n              potentialMovePosition.isValidPosition = true\n              potentialMovePosition.isOn = true\n            }\n          })\n        }\n      }\n    }\n\n    this.redraw = true\n  }\n  \n\n  /**\n   * return Array of currently lit positions\n   */\n  findCurrentlyLit() {\n    return this.flatTileList.filter(element => element.isOn)\n  }\n\n  /**\n   * Sets the isOn property to false for all tiles\n   */\n  turnOffAllTileLights() {\n    this.flatTileList.forEach(tile => {\n      tile.isOn = false\n      tile.canKingSideCastle = false\n      tile.canQueenSideCastle = false\n    })\n  }\n\n  \n  /**\n   * Called on an interval to update the DOM elements that represent the board\n   * visually based on the board model\n   */\n  updateDisplay(lightMode:ILightPattern = null) {\n\n    // If using a lighting mode then update the tile light pattern on each display update\n    if (lightMode) {\n      lightMode.updatePattern(this)\n      this.redraw = true\n    }\n\n    // If chessboard marked for redraw (after moves) update all the tile styles and contents\n    if(this.redraw) {\n      let gameStatusText = \"\"\n\n      if(this.whitePlayer.inCheck)\n        gameStatusText += \"White player is in check. \"\n      if(this.blackPlayer.inCheck)\n        gameStatusText += \"Black player is in check. \"\n\n      if(this.whitePlayer.inCheckmate)\n        gameStatusText = \"White player is in checkmate. GG\"\n      if(this.blackPlayer.inCheckmate)\n        gameStatusText = \"Black player is in checkmate. GG\"\n\n      if(this.whitePlayer.inStalemate || this.blackPlayer.inStalemate)\n        gameStatusText = \"Game is in stalemate. GG\"\n\n      document.getElementById('game-status').innerHTML = gameStatusText\n\n      this.flatTileList.forEach(tile => {\n  \n        let curTileElm = document.getElementById(`${this.targetElement}-tile-${tile.id}`)\n        const onOrOffTile = tile.isOn ? 'on' : 'off'\n  \n        const newClassName = `chess-tile ${onOrOffTile} tile-color-${tile.tileBaseColor}`\n        if(curTileElm.className != newClassName)\n        curTileElm.className = `chess-tile ${onOrOffTile} tile-color-${tile.tileBaseColor}`\n  \n\n        let curTileSymbolElm = document.getElementById(`${this.targetElement}-tilesymbol-${tile.id}`)\n\n        if (tile.currentPiece) {\n          curTileSymbolElm.style.color = tile.currentPiece.color\n        }\n  \n        let displayText = \"\"\n        if (tile.currentPiece) {\n          displayText = tile.currentPiece.pieceSymbol()\n        }\n  \n        curTileSymbolElm.innerHTML = `${displayText}`\n      })\n      this.redraw = false\n    }\n  }\n\n  /**\n   * Clears out and rebuilds the DOM elements for the board based on the board model\n   * deals with finding valid moves and highlighting cells on the board based on the\n   * board model\n   */\n  drawInitialBoard() {\n    let chessBoard = document.getElementById(this.targetElement)\n\n    // Emptying out the elements from the board container\n    while (chessBoard.firstChild) {\n      chessBoard.removeChild(chessBoard.firstChild);\n    }\n\n    // Maps all the tiles row by row into DOM elements\n    const boardRowDOMElms = this.boardTiles\n      .map((tileRow) => {\n\n        // Maps all the cells of a given row into DOM elements\n        const cells = tileRow.map((tile) => {\n          let tileDiv = document.createElement('div')\n          tileDiv.className = `chess-tile ${tile.id % 2 == 0 ? 'even' : 'odd'}  ${tile.isOn ? 'on' : 'off'} tile-color-${tile.tileBaseColor}`\n          tileDiv.id = `${this.targetElement}-tile-${tile.id}`\n          tileDiv.style.position = \"relative\"\n\n          tileDiv.addEventListener('click', () => { this.tileClickHandler(tile) })\n\n          let tileNumDiv = document.createElement('div')\n          tileNumDiv.style.position = \"absolute\"\n          tileNumDiv.style.top = \"4px\"\n          tileNumDiv.style.left = \"4px\"\n          tileNumDiv.style.fontSize = \"1rem\"\n          tileNumDiv.style.color = \"rgba(255,255,255,.5)\"\n          tileNumDiv.innerHTML = `${getRank(tile.x)}${getFile(tile.y)}`\n          tileDiv.appendChild(tileNumDiv)\n\n\n          let tileSymbolSpan = document.createElement('span')\n          tileSymbolSpan.id = `${this.targetElement}-tilesymbol-${tile.id}`\n          tileDiv.appendChild(tileSymbolSpan)\n\n          return tileDiv\n        })\n        let rowDiv = document.createElement('div')\n        rowDiv.className = 'row'\n        cells.forEach(cell => { rowDiv.appendChild(cell) })\n        return rowDiv\n      })\n    boardRowDOMElms.forEach(boardRowDOMElm => chessBoard.appendChild(boardRowDOMElm))\n\n  }\n\n  generateFEN(): string {\n    let fen = '';\n\n    // Generate piece placement part of FEN\n    for (let rank = 7; rank >= 0; rank--) {\n      let emptySquares = 0;\n\n      for (let file = 0; file < 8; file++) {\n        const tile = this.boardTiles[rank][file];\n\n        if (tile.currentPiece) {\n          if (emptySquares > 0) {\n            fen += emptySquares;\n            emptySquares = 0;\n          }\n\n          // Append piece letter (uppercase for White, lowercase for Black)\n          fen += tile.currentPiece.color === \"white\" ? tile.currentPiece.fenType.toUpperCase() : tile.currentPiece.fenType.toLowerCase();\n        } else {\n          emptySquares++;\n        }\n      }\n\n      if (emptySquares > 0) {\n        fen += emptySquares;\n      }\n\n      if (rank > 0) {\n        fen += '/';\n      }\n    }\n\n    // Add information about active color, castling, en passant, halfmove clock, and fullmove number\n\n    const fenCurPlayerColor = this.currentPlayer.color === \"white\" ? \"w\" : \"b\"\n\n    const {castlingAvailable, enPassantSquare, numberOfFullMoves, numberOfHalfMoves} = this\n\n    fen += ` ${fenCurPlayerColor} ${castlingAvailable} ${enPassantSquare} ${numberOfHalfMoves} ${numberOfFullMoves}`; // Assuming default values for these fields\n\n    return fen;\n  }\n\n  // Castling availability:\n  // 'K' (or 'k') for kingside castling (short).\n  // 'Q' (or 'q') for queenside castling (long).\n  // '-' if neither side can castle.\n  // example KQkq (all castling possible)\n  // example Kq (castling on white possible on king side, castling possible for black on queen side only\n  getCastlingAvailableFEN() {\n    \n  }\n}","import ChessBoard from \"../ChessBoard\";\nimport ChessTile from \"../ChessTile\";\nimport ChessPiece from \"./ChessPiece\";\n\nexport default class Bishop extends ChessPiece {\n  get fenType(): string {\n    return 'B'\n  }\n  pieceSymbol = () => this.color==\"black\" ?  \"♝\" : \"♗\";\n  \n  hasMoved:boolean;\n\n  findValidMoves(boardState:ChessBoard): Array<{ x: number; y: number; }> {\n    const validPositions:Array<{x:number, y:number}> = []\n    const {myPos} = this\n\n    \n    // All spaces to other \"diaganol 1\"\n    for(let i=myPos.x+1, j=myPos.y+1; i < 8 && j<8; i++, j++) {\n      let curTile = boardState.getTileAtPosition(i, j)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    \n    // All spaces to other \"diaganol 2\"\n    for(let i=myPos.x-1, j=myPos.y-1; i >= 0 && j >= 0; i--, j--) {\n      let curTile = boardState.getTileAtPosition(i, j)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n\n    \n    // All spaces to other \"diaganol 3\"\n    for(let i=myPos.x+1, j=myPos.y-1; i < 8 && j >= 0; i++, j--) {\n      let curTile = boardState.getTileAtPosition(i, j)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n\n    // All spaces to other \"diaganol 4\"\n    for(let i=myPos.x-1, j=myPos.y+1; i >= 0 && j < 8; i--, j++) {\n      let curTile = boardState.getTileAtPosition(i, j)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    return validPositions\n\n  }\n\n  clone(boardTiles:Array<Array<ChessTile>>): ChessPiece {\n    return new Bishop(boardTiles, this.currentTile.y,this.currentTile.x, this.color)\n  }\n}","import ChessBoard from \"../ChessBoard\";\nimport ChessTile from \"../ChessTile\";\n\n/**\n * Abstract Base Class for common properties/methods for all of the pieces\n */\nexport default abstract class ChessPiece {\n  abstract pieceSymbol(): string\n  abstract get fenType(): string\n  /**\n   * \n   * @param boardState The current board state to find valid moves on\n   */\n  abstract findValidMoves(boardState: ChessBoard): Array<{ x: number; y: number; }>\n  abstract clone(boardTiles:Array<Array<ChessTile>>): ChessPiece\n  public currentTile: ChessTile = null\n\n  constructor(boardTiles: Array<Array<ChessTile>>, x: number, y: number, public color: \"white\" | \"black\" = \"white\", public hasMoved = false) {\n    boardTiles[x][y].currentPiece = this\n    this.currentTile = boardTiles[x][y]\n  }\n\n  get direction() { return this.color === \"white\" ? 1 : -1 }\n\n  get myPos() {\n    return {\n      x: this.currentTile.x,\n      y: this.currentTile.y\n    }\n  }\n\n  toString() {\n    return `${this.pieceSymbol()}`\n  }\n\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import ChessPiece from \"./ChessPieces/ChessPiece\";\nimport {getFile, getRank} from \"./ChessPieces/util\"\n\nexport default class ChessTile {\n    id: number\n    y: number\n    x: number\n    \n    isValidPosition: boolean\n    canKingSideCastle: boolean\n    canQueenSideCastle: boolean\n\n    prevLight: ChessTile;\n    nextLight: ChessTile;\n\n    currentPiece:ChessPiece|null;\n\n    get tileBaseColor () {\n        return (this.id+(this.y%2))%2==0 ? \"black\" : \"white\"\n    }\n\n    constructor(id, x, y, public isOn=false, public hue=0, public saturation=100, public brightness=50) {\n        this.id = id\n        this.x = x\n        this.y = y\n    }\n\n    // Just clones the object with properties needed for checking valid positions\n    // for checking hypothetical board states\n    clone() {\n        return new ChessTile(this.id, this.x, this.y)\n    }\n    toString() {\n        return `${getFile(this.x)}${getRank(this.y)} with Piece ${this.currentPiece}`\n    }\n}","export function getRank(index:number){\n  return ['a','b','c','d','e','f','g','h'][index]\n}\nexport function getFile(index:number){\n  return 8-index\n}","import ChessBoard from \"../ChessBoard\";\nimport ChessTile from \"../ChessTile\";\nimport ChessPiece from \"./ChessPiece\";\n\nexport default class Knight extends ChessPiece {\n  get fenType(): string {\n    return 'N'\n  }\n  pieceSymbol = () => this.color==\"black\" ?  \"♞\" : \"♘\";\n  \n  hasMoved:boolean;\n\n  findValidMoves(boardState:ChessBoard): Array<{ x: number; y: number; }> {\n    const validPositions:Array<{x:number, y:number}> = []\n    const {myPos} = this\n    \n    let tileOne = boardState.getTileAtPosition(myPos.x+2, myPos.y+1)\n    let tileTwo = boardState.getTileAtPosition(myPos.x+1, myPos.y+2)\n    let tileThree = boardState.getTileAtPosition(myPos.x-2, myPos.y+1)\n    let tileFour = boardState.getTileAtPosition(myPos.x-1, myPos.y+2)\n    \n    let tileFive = boardState.getTileAtPosition(myPos.x-2, myPos.y-1)\n    let tileSix = boardState.getTileAtPosition(myPos.x-1, myPos.y-2)\n    let tileSeven = boardState.getTileAtPosition(myPos.x+2, myPos.y-1)\n    let tileEight = boardState.getTileAtPosition(myPos.x+1, myPos.y-2);\n\n    [tileOne,tileTwo,tileThree,tileFour,tileFive,tileSix,tileSeven,tileEight].forEach(tile=>{\n      // skip if the tile doesn't exist\n      if(!tile) return;\n      // \n      if(!tile.currentPiece || tile.currentPiece.color != this.color) {\n        validPositions.push(tile)\n      }\n    })\n\n\n    return validPositions\n  }\n  \n  clone(boardTiles:Array<Array<ChessTile>>): ChessPiece {\n    return new Knight(boardTiles, this.currentTile.y, this.currentTile.x, this.color)\n  }\n}","import ChessBoard from \"../ChessBoard\";\nimport ChessTile from \"../ChessTile\";\nimport ChessPiece from \"./ChessPiece\";\n\nexport default class Pawn extends ChessPiece {\n  get fenType(): string {\n    return 'P'\n  }\n  pieceSymbol = () => this.color==\"black\" ?  \"♟︎\" : \"♙\";\n\n  findValidMoves(boardState:ChessBoard): Array<{ x: number; y: number; }> {\n    const validPositions:Array<{x:number, y:number}> = []\n    const {myPos, direction} = this\n\n    let tileTL = boardState.getTileAtPosition(myPos.x+direction, myPos.y+direction)\n    let tileTR = boardState.getTileAtPosition(myPos.x-direction, myPos.y+direction)\n    \n    const addTilePositionIfValid = (tile:ChessTile) => {\n      if(tile && (tile.currentPiece && tile.currentPiece.color!=this.color)) {\n        validPositions.push({x:tile.x,y:tile.y})\n      }\n    }\n\n    [tileTL,tileTR].forEach(tile=>addTilePositionIfValid(tile))\n\n    let pieceOneAhead = boardState.getPieceAtPosition(myPos.x, myPos.y+direction)\n    if(!pieceOneAhead) {\n      validPositions.push({\n        x: myPos.x,\n        y: myPos.y+direction\n      })\n    }\n\n    // Pawn can move two spots if hasn't moved yet\n    if(!this.hasMoved && !pieceOneAhead) {\n      let twoPiecesAhead = boardState.getPieceAtPosition(myPos.x, myPos.y+direction*2)\n      if(!twoPiecesAhead) {\n        validPositions.push({\n          x: myPos.x,\n          y: myPos.y+direction*2\n        })\n      }\n    }\n\n    return validPositions;\n  }\n  \n  clone(boardTiles:Array<Array<ChessTile>>): ChessPiece {\n    return new Pawn(boardTiles, this.currentTile.y, this.currentTile.x, this.color)\n  }\n}","import ChessBoard from \"../ChessBoard\";\nimport ChessTile from \"../ChessTile\";\nimport ChessPiece from \"./ChessPiece\";\n\nexport default class Rook extends ChessPiece {\n  public kingSideRook: boolean = false;\n\n  get fenType(): string {\n    return 'R'\n  }\n  pieceSymbol = () => this.color==\"black\" ?  \"♜\" : \"♖\";\n  \n  findValidMoves(boardState:ChessBoard): Array<{ x: number; y: number; }> {\n    const validPositions:Array<{x:number, y:number}> = []\n    // Destructuring props of this\n    const {myPos} = this\n\n    // All spaces to one side \"left\"\n    for(let i=myPos.x-1; i >= 0; i--) {\n      let curTile = boardState.getTileAtPosition(i, myPos.y)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n\n    // All spaces to other side \"right\"\n    for(let i=myPos.x+1; i < 8; i++) {\n      let curTile = boardState.getTileAtPosition(i, myPos.y)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    \n    // All spaces to one side \"top\"\n    for(let i=myPos.y-1; i >= 0; i--) {\n      let curTile = boardState.getTileAtPosition(myPos.x, i)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    \n    // All spaces to other side \"bottom\"\n    for(let i=myPos.y+1; i < 8; i++) {\n      let curTile = boardState.getTileAtPosition(myPos.x, i)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    return validPositions\n\n  }\n  \n  clone(boardTiles:Array<Array<ChessTile>>): ChessPiece {\n    return new Rook(boardTiles, this.currentTile.y, this.currentTile.x, this.color)\n  }\n}","import ChessBoard from \"../ChessBoard\";\nimport ChessTile from \"../ChessTile\";\nimport ChessPiece from \"./ChessPiece\";\n\nexport default class Queen extends ChessPiece {\n  get fenType(): string {\n    return 'Q'\n  }\n  pieceSymbol = () => this.color==\"black\" ?  \"♛\" : \"♕\";\n  \n  hasMoved:boolean;\n\n  findValidMoves(boardState:ChessBoard): Array<{ x: number; y: number; }> {\n    const validPositions:Array<{x:number, y:number}> = []\n    const {myPos} = this;\n\n    // All spaces to one side \"left\"\n    for(let i=myPos.x-1; i >= 0; i--) {\n      let curTile = boardState.getTileAtPosition(i, myPos.y)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n\n    // All spaces to other side \"right\"\n    for(let i=myPos.x+1; i < 8; i++) {\n      let curTile = boardState.getTileAtPosition(i, myPos.y)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    \n    // All spaces to one side \"top\"\n    for(let i=myPos.y-1; i >= 0; i--) {\n      let curTile = boardState.getTileAtPosition(myPos.x, i)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    \n    // All spaces to other side \"bottom\"\n    for(let i=myPos.y+1; i < 8; i++) {\n      let curTile = boardState.getTileAtPosition(myPos.x, i)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    \n    // All spaces to other \"diaganol 1\"\n    for(let i=myPos.x+1, j=myPos.y+1; i < 8 && j<8; i++, j++) {\n      let curTile = boardState.getTileAtPosition(i, j)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n    \n    // All spaces to other \"diaganol 2\"\n    for(let i=myPos.x-1, j=myPos.y-1; i >= 0 && j >= 0; i--, j--) {\n      let curTile = boardState.getTileAtPosition(i, j)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n\n    \n    // All spaces to other \"diaganol 3\"\n    for(let i=myPos.x+1, j=myPos.y-1; i < 8 && j >= 0; i++, j--) {\n      let curTile = boardState.getTileAtPosition(i, j)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n\n    // All spaces to other \"diaganol 4\"\n    for(let i=myPos.x-1, j=myPos.y+1; i >= 0 && j < 8; i--, j++) {\n      let curTile = boardState.getTileAtPosition(i, j)\n      // If we run into the same color stop\n      if(curTile.currentPiece && curTile.currentPiece.color == this.color)\n      break;\n\n      // If we run into a piece with a different color include it and stop\n      if(curTile.currentPiece && curTile.currentPiece.color != this.color) {\n        validPositions.push(curTile)\n        break\n      }\n      else if(curTile) {\n        validPositions.push(curTile)\n      }\n    }\n\n    return validPositions\n  }\n  \n  clone(boardTiles:Array<Array<ChessTile>>): ChessPiece {\n    return new Queen(boardTiles, this.currentTile.y, this.currentTile.x, this.color)\n  }\n}","import ChessBoard from \"../ChessBoard\";\nimport ChessTile from \"../ChessTile\";\nimport ChessPiece from \"./ChessPiece\";\n\nexport default class King extends ChessPiece {\n\n  get fenType(): string {\n    return 'K'\n  }\n  pieceSymbol = () => this.color==\"black\" ?  \"♚\" : \"♔\";\n  \n  findValidMoves(boardState:ChessBoard): Array<{ x: number; y: number; }> {\n    const validPositions:Array<{x:number, y:number}> = []\n\n    const {myPos, direction} = this;\n\n    // Cardinal positions\n    let tileOneAbove = boardState.getTileAtPosition(myPos.x, myPos.y+direction)\n    let tileOneBelow = boardState.getTileAtPosition(myPos.x, myPos.y-direction)\n    let tileOneLeft = boardState.getTileAtPosition(myPos.x-1, myPos.y)\n    let tileOneRight = boardState.getTileAtPosition(myPos.x+1, myPos.y)\n\n    // Diaganol moves\n    let tileTL = boardState.getTileAtPosition(myPos.x+direction, myPos.y+direction)\n    let tileBL = boardState.getTileAtPosition(myPos.x+direction, myPos.y-direction)\n    let tileTR = boardState.getTileAtPosition(myPos.x-direction, myPos.y+direction)\n    let tileBR = boardState.getTileAtPosition(myPos.x-direction, myPos.y-direction)\n\n    const addTilePositionIfValid = (tile:ChessTile) => {\n      if(tile && (!tile.currentPiece || (tile.currentPiece && tile.currentPiece.color!=this.color))) {\n        validPositions.push({x:tile.x,y:tile.y})\n      }\n    }\n\n    [tileOneAbove, tileOneBelow, tileOneLeft, tileOneRight, tileTL, tileBL, tileTR, tileBR].forEach(tile => {\n      addTilePositionIfValid(tile)\n    })\n    \n    return validPositions\n  }\n  \n  clone(boardTiles:Array<Array<ChessTile>>): ChessPiece {\n    return new King(boardTiles, this.currentTile.y, this.currentTile.x, this.color)\n  }\n}","import ChessPiece from \"./ChessPieces/ChessPiece\";\nimport King from \"./ChessPieces/King\";\nimport Rook from \"./ChessPieces/Rook\";\n\nexport default class Player {\n  pieces: Array<ChessPiece> = []\n  inCheck: boolean = false\n  inCheckmate: boolean = false\n  inStalemate: boolean = false\n  canKingSideCastle: boolean = false\n  canQueenSideCastle: boolean = false\n\n  constructor(public color: \"white\" | \"black\") { }\n  \n  get king():King {\n    return this.pieces.find((value,index,obj) => {\n      return value instanceof King\n    }) as King\n  }\n\n  get kingHasMoved() {\n    return this.king.hasMoved\n  }\n\n  get kingSideRook():Rook {\n    return this.pieces.find((value,index,obj) => {\n      return value instanceof Rook && value.kingSideRook\n    }) as Rook\n  }\n\n  get kingSideRookHasMoved() {\n    if(!this.kingSideRook) return true\n    \n    return this.kingSideRook.hasMoved\n  }\n\n  get queenSideRook():Rook {\n    return this.pieces.find((value,index,obj) => {\n      return value instanceof Rook && !value.kingSideRook\n    }) as Rook\n  }\n\n  get queenSideRookHasMoved() {\n    if(!this.queenSideRook) return true\n\n    return this.queenSideRook.hasMoved\n  }\n\n  \n  clone() {\n    return new Player(this.color)\n  }\n  toString() {\n    return `${this.color} player, pieces: ${this.pieces}, in check: ${this.inCheck}, in stalemate: ${this.inStalemate}, in checkmate: ${this.inCheckmate}`\n  }\n}","import ChessBoard from \"../ChessBoard\";\nimport ILightPattern from \"./ILightPattern\";\n\nexport class RowPattern implements ILightPattern {\n    currentlyLitLightRow = 0\n    updatePattern(currentBoard:ChessBoard): void {\n        currentBoard.turnOffAllTileLights()\n\n        currentBoard.boardTiles[this.currentlyLitLightRow].forEach(lightData => lightData.isOn = true)\n        this.currentlyLitLightRow++\n        if(this.currentlyLitLightRow >= currentBoard.boardTiles.length) {\n            this.currentlyLitLightRow = 0\n        }\n    }\n}","import ChessBoard from \"../ChessBoard\";\nimport ILightPattern from \"./ILightPattern\";\n\nexport class SequencePattern implements ILightPattern {\n    firstRun = true\n    constructor() {\n    }\n    updatePattern(currentBoard:ChessBoard): void {\n        if(this.firstRun) {\n            currentBoard.turnOffAllTileLights()\n            currentBoard.flatTileList[0].isOn = true\n            this.firstRun = false\n        }\n        let currentlyLit = currentBoard.findCurrentlyLit()\n        \n        if(currentlyLit.length > 0) {\n\n            for (let i = currentlyLit.length - 1; 0 <= i; i--) {\n                const lightData = currentlyLit[i];\n                \n                lightData.isOn = false;\n                lightData.nextLight.isOn = true;\n            }\n        }\n    }\n}","import ChessBoard from \"../ChessBoard\";\nimport ILightPattern from \"./ILightPattern\";\n\nexport class SnakePattern implements ILightPattern {\n    snakeHead = 0\n    snakeLength = 12\n    updatePattern(currentBoard:ChessBoard): void {\n        currentBoard.turnOffAllTileLights()\n\n        let snakeHeadElm = currentBoard.flatTileList[this.snakeHead]\n        snakeHeadElm.isOn = true\n\n        let curLight = snakeHeadElm\n        for (let i = 0; i < this.snakeLength; i++) {\n            curLight = curLight.nextLight\n            curLight.isOn = true\n            if(i==0)\n                this.snakeHead = curLight.id\n        }\n    }\n}"],"names":[],"version":3,"file":"index.4f58ba16.js.map","sourceRoot":"/__parcel_source_root/"}